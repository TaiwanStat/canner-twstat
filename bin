#!/usr/bin/env node

var core = require('canner-core');
var argv = require('minimist')(process.argv.slice(2));

var fs = require('fs-extra');
var path = require('path');
var load = argv._[0];
var project = argv._[1];
var w = argv.w;
var minify = argv.m;
var i

var twstat = {};

twstat.build = function(load, w) {

  var json_root = path.dirname(load);
  var posts = require(path.resolve(process.cwd(), load));

  if(!w) {
    fn = core.build(posts, {
          cwd: json_root,
          output: json_root,
          minify: minify
        })
  }else {
    fn = core.watch(posts, {
          cwd: json_root,
          serve: json_root,
          output: json_root,
          minify: minify,
          reloader: function() {
            return posts;
          },
          changeFilter: function (row, f, curr, prev) {
            if(path.extname(f) === '.hbs') {
              return (f === path.resolve(json_root, row.layout));
            }
          }
        })
  }
}

twstat.init = function(load, project) {
  var list_path = path.join(process.cwd(), 'lists.json')
  var lists = require(list_path);

  lists.data.page.unshift({
    "title": project,
    "url": project,
    "img": "images/" + project + ".png",
    "description": "Project description"
  })

  var new_file = path.join(process.cwd(), project, 'index.hbs');

  if(!fs.existsSync(new_file))
    fs.copy(path.join(__dirname, 'init.hbs'), new_file, function(err) {if(err) return console.error(err)})

  console.log('Init your project: ' + new_file);
  fs.writeFileSync(list_path, JSON.stringify(lists, null, 2))
  console.log('Add your project to lists.json: ' + list_path)
}

if(load === 'init' && project) {
  // init project
  twstat.init(load, project)
}else if (load === 'init' && !project) {
    console.log("Usage: twstat init <project name>");
}else {
  if(path.extname(load) === '.js' && w){
    twstat.build(load, w);
  }else if(path.extname(load) === '.js' && !w){
    twstat.build(load);
  }else{
    console.log("Usage: twstat <twstat configuration file>");
  }
}
